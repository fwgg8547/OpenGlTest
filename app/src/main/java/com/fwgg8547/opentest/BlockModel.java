package com.fwgg8547.opentest;

import java.util.List;
import java.util.ArrayList;
import java.util.*;
import android.graphics.*;

public class BlockModel extends SpriteBaseModel
{
	private static final String TAG = "BlockModel";
	private int mIdOffset;
	
	public BlockModel(){
		super();
		mBlocks = new ArrayList<Item>();
	}
	
	public void initialize(TreeManager tree, int offset, int num, ModelGroup mg){
		mCollisionTree = tree;
		mIndexCount =0;
		mGroup = mg;
		mIdOffset = offset;
		
		for(int i=0; i<num; i++){
			
			Sprite s = new Sprite(mIdOffset +i);
			Item it = new Item();
			it.mId = mIdOffset+i;
			it.mGroupId = 1;
			it.setSprite(s);
			it.setPosition(110.0f, 200.0f, 0.0f, 0.0f);
			
			try {
				mLock.writeLock();
				mBlocks.add(it);
				mGroup.add(it);
				mLock.writeUnlock();
			} catch(Exception e){
				
			}
			
		}
	}
	
	private Item createItem(){
		
		Sprite s = new Sprite(mIdOffset);
		Item it = new Item();
		it.mId = mIdOffset;
		it.mGroupId = 1;
		it.setSprite(s);
		it.setPosition(110.0f, 200.0f, 0.0f, 0.0f);

		try {
			mLock.writeLock();
			mBlocks.add(it);
			mGroup.add(it);
			mLock.writeUnlock();
		} catch(Exception e){

		}
		
		return it;
	}

	@Override
	public void onUpdate()
	{
		try {
			mLock.writeLock();
			// update item
			Iterator it = mBlocks.iterator();
			while(it.hasNext()){
				Item i = (Item)it.next();
			
				// delete check
				if(i.mIsDeleted){
					it.remove();
					continue;
				}
			
				// animation check
				PointF pos = i.moveAnimation();
				if(!isInScreen(i)){
					i.mIsDeleted = true;
				} else {
					if(pos != null){
						refreshTree(i);
					}
				}
			
			}
		
			// add new
			if(mBlocks.size() == 0){
				Item i = createItem();
				refreshTree(i);
			}
			
			mLock.writeUnlock();
		} catch(Exception e){
			
		}
	}
	
	private boolean isInScreen(Item i){
		boolean ret = false;
		
		RectF rec = i.getRect();
		RectF scrn = ScreenModel.getInstance().getScreenInfo();
		ret = scrn.contains(rec);
		return ret;
	}
	
	

}
