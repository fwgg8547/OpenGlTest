package com.fwgg8547.opentest;

import java.util.List;
import java.util.ArrayList;
import android.view.MotionEvent;
import android.graphics.*;
import java.util.*;

public class GLController implements GlSurf.Callback, ScreenModel.Callback
{
	private final static String TAG = "GLController";
	private List<SpriteModel> mModels;
	private TreeManager mTree;

	public GLController()
	{
		mModels = new ArrayList<SpriteModel>();
		mTree = new TreeManager();
		ScreenModel.getInstance().setCallback(this);
	}

	public void onScreenChange(){
		mTree.initialize(ScreenModel.getInstance().getScreenInfo());
		
		
		Iterator it = mModels.iterator();
		while(it.hasNext()){
			SpriteModel m = (SpriteModel)it.next();
			mTree.registModel(m);
		}
	}
	
	public void addModel(SpriteModel m)
	{
		mModels.add(m);
	}

	public boolean onTouchEvent(MotionEvent event)
	{
		if(event.getAction() == MotionEvent.ACTION_DOWN)
		{
			RectF screen = ScreenModel.getInstance().getScreenInfo();
			float tx = event.getX() ;
			float ty = screen.height() - event.getY();
			Lg.i(TAG, "touch x"+tx + " y "+ty);
			
			int mnum = mTree.GetMortonNumber(tx,ty);
			Lg.i(TAG, "mnum = " + mnum);
			
			/*
			mTree.getCellByMnum(TreeManager.MAX_LEVEL, mnum);
			mTree.getParentMnum(mnum);
			*/
			List<ObjectTree> cl;
			cl = mTree.getCollisionList(TreeManager.MAX_LEVEL, mnum);
			Lg.i(TAG, "cl " + cl.size());
			
			Iterator it = cl.iterator();
			while(it.hasNext()){
				ObjectTree ot = (ObjectTree)it.next();
				boolean b = ot.getItem().getSprite().conflict(tx,ty);
				if(b){
					Lg.i(TAG,"hit");
				}
			}
			/*
			Iterator it = mModels.iterator();
			while(it.hasNext()){
				SpriteModel m = (SpriteModel)it.next();
				if(m.conflict(tx, ty))
				{
					Lg.i(TAG, "hit");
					int index = m.getIndexOfConflict();
				}
			}
			*/
		}
		return true;
	}

	public void updateModels()
	{
		/*
			if(mMoveType == 0){
			mRoad.scrollup(mDelta);
			
			} else {
			mDeg++;
			mRoad.roll(100f, mDeg);
			}
		*/
		//mLayer.update();
	}
}
