package com.fwgg8547.opentest;
import android.graphics.*;
import android.animation.*;

public class Item
{
	public int mId;
	private RectF mOutline;
	private Sprite mSprite;
	public boolean mIsDeleted;
	public boolean mIsConflict;
	//public ObjectTree mObjectTree;
	private Cell mCell;
	private MoveType mMoveType;
	private float mDx;
	private float mDy;
	private float mR;
	private float mDeg;
	private float mDDeg;
	private MoveParam mRl;

	public class MoveParam{
		public float mx;
		public float my;
		public float mr;
		public float mdeg;
		
		public MoveParam(float x, float y, float r, float deg){
			mx = x;
			my = y;
			mr = r;
			mdeg = deg;
		}
		
		public void setParam(float x, float y, float r, float deg){
			mx = x;
			my = y;
			mr = r;
			mdeg = deg;
		}
	}
	
	public enum MoveType {
		NONE,
		STRIGHT,
		CIRCLE
	}
	
	public Item() 
	{
		mIsDeleted = false;
		mIsConflict = false;
		mDy = 0.0f;
		mDx = 0.0f;
		mR = 0.0f;
		mDeg = 0.0f;
		mDDeg = 0.0f;
		mMoveType = MoveType.NONE;
		mRl = new MoveParam(0.0f,0.0f,0.0f,0.0f);
	}
	
	public int getSpriteId(){
		return mSprite.getId();
	}
	
	public void setMoveParam(float x, float y, float r, float deg){
		mDx = x;
		mDy = y;
		mR = r;
		mDDeg = deg;
	}
	
	public void setRailParam(float x, float y, float r, float deg){
		mRl.setParam(x,y,r,deg);
	}
	
	public void setMoveType(MoveType mt){
		mMoveType = mt;
	}
	
	public MoveType getType(){
		return mMoveType;
	}
	
	public void setSprite(Sprite s){
		mSprite = s;
		mOutline = s.getOutline();
	}
	
	public Sprite getSprite(){
		return mSprite;
	}
	
	public RectF getRect() {
		return mSprite.getOutline();
	}
	
	public void setCell(Cell c){
		mCell = c;
	}

	public Cell getCell(){
		return mCell;
	}
	
	// ラジアン = 度 × 円周率 ÷ 180
	public void onMove(){
		
		// x,y move
		//PointF op = mSprite.getPosition();
		mSprite.translateDelta(mDx, mDy);
		
		// circle move
		double rad = mDeg * Math.PI / 180.0;
		float cx = (float)(mR*Math.cos(rad));
		float cy = (float)(mR*Math.sin(rad));
		
		mSprite.translateTemp(cx, cy);
		mDeg += mDDeg;
	}
	
	public void moveSingle(float x, float y){
		mSprite.translate(x,y);
	}
	
	public void moveRail(float x, float y){
		RectF rect = mSprite.getOutline();
		Vec2 v = new Vec2(x-mRl.mx, y-mRl.my);
		float r = mRl.mr / Vec2.size(v);
		v.multiply(r);
		v.x += mRl.mx;
		v.y += mRl.my;
		//mSprite.translateDelta(v);
		//center value
		mSprite.translate(v);
	}
}
